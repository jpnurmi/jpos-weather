export global DayTime {
    in-out property<[int]> sunrises;
    in-out property<[int]> sunsets;
    in-out property<bool> refreshing;
    callback refresh(float, float, string);
    pure public function is-day(day: int, hour: int) -> bool {
        return hour > sunrises[day] && hour <= sunsets[day];
    }
    pure public function is-night(day: int, hour: int) -> bool {
        return hour <= sunrises[day] || hour > sunsets[day];
    }
}

export global GeoIP {
    in-out property<float> latitude;
    in-out property<float> longitude;
    in-out property<string> city;
    in-out property<string> country;
    in-out property<string> timezone;
    in-out property<bool> refreshing;
    callback refresh();
}

export struct Params {
    hour: int,
    temperature: float,
    symbol: int,
}

export struct Forecast {
    date: string,
    offset: int,
    min-temperature: float,
    max-temperature: float,
    params: [Params],
}

export global Smhi {
    in-out property<[Forecast]> forecasts;
    in-out property<bool> refreshing;
    callback refresh(float, float);
}
